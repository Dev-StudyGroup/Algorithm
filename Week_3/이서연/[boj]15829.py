'''
Hashing

- 문제 요약
입력으로 들어오는 문자열은 영문 소문자로만 구성되어 있다고 가정하자. 26개의 알파벳이므로 a에는 1, ..., z에는 26으로 고유한 번호 부여할 수 있다.
해시값 계산을 위해 문자열(->수열로 나타냄)을 하나의 정수로 치환. 이때 수열의 값을 모두 더한 후 M으로 나눈다.
해시 충돌을 막기 위해 항의 번호에 해당하는 만큼 특정한 숫자(r)를 거듭제곱해서 곱해준 다음 더한 후 M으로 나눈다.
r의 값은 26보다 큰 소수인 31로 하고, M의 값은 1234567891로 하자.

주어진 문자열의 해시값을 계산하는 프로그램

- 입력 조건
첫째 줄에 문자열의 길이 L, 둘째 줄에 영문 소문자로만 이루어진 문자열이 들어온다.
입력으로 주어지는 문자열은 모두 알파벳 소문자로만 구성되어있다.

- 출력 조건
계산한 해시 값을 정수로 출력
'''
l = int(input())
str = input()
r = 31
m = 1234567891
result = 0
for i in range(l):
    a = ord(str[i]) - ord('a') + 1
    result += a * r**i
result = result % m

print(result)
